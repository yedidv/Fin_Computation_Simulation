install.packages('reticulate')
install.packages('reticulate')
install.packages('reticulate')
library(reticulate)
detach("package:reticulate", unload = TRUE)
library(reticulate)
install.packages('tidyverse')
shiny::runApp('Desktop/Practice/data_science/airbnb/practice_shiny')
install.packages('tidyverse')
install.packages('data.table')
{python}
import pandas as pd
library(reticulate)
import pandas
reticulate::repl_python()
import pandas as pd
y
reticulate::repl_python()
import numpy as np
yes
reticulate::repl_python()
## Call all the needed packages
source('funs.r')
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(reshape2)
install.packages('reshape2')
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
##### Question 1: ####
# Find the value of one year
# european call and put options on a
# stock currently trading for $50 with a
# strike price of $50. With a risk free rate
# of 5% and the underlying stock volatility of 40%
###### Question 2: #####
# Create a function to calculate the model
# given the dependent variables
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
paste0('The price of the call option is: ', q_1_values$call)
paste0('The price of the put option is: ', q_1_values$put)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
### Start by defining the terms
s_0 <- 50 ## current stock price
K <- 50 ## Current strike price
r <- 0.05 ## Risk Free Rate
sigma <- 0.4 ## volatility of underlying equity
time <- 1 ## Time to maturity (in days)
##### Question 1: ####
# Find the value of one year
# european call and put options on a
# stock currently trading for $50 with a
# strike price of $50. With a risk free rate
# of 5% and the underlying stock volatility of 40%
###### Question 2: #####
# Create a function to calculate the model
# given the dependent variables
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
paste0('The price of the call option is: ', q_1_values$call)
paste0('The price of the put option is: ', q_1_values$put)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(K, s_0, r, time, sigma)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(K, s_0, r, time, sigma)
## Call all the needed packages
## Call all the needed packages
## Call all the needed packages
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
s_0 <- 50 ## current stock price
K <- 50 ## Current strike price
r <- 0.05 ## Risk Free Rate
sigma <- 0.4 ## volatility of underlying equity
time <- 1 ## Time to maturity (in days)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(K, s_0, r, time, sigma)
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
### Start by defining the terms
s_0 <- 50 ## current stock price
K <- 50 ## Current strike price
r <- 0.05 ## Risk Free Rate
sigma <- 0.4 ## volatility of underlying equity
time <- 1 ## Time to maturity (in days)
##### Question 1: ####
# Find the value of one year
# european call and put options on a
# stock currently trading for $50 with a
# strike price of $50. With a risk free rate
# of 5% and the underlying stock volatility of 40%
###### Question 2: #####
# Create a function to calculate the model
# given the dependent variables
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(K, s_0, r, time, sigma)
paste0('The price of the call option is: ', q_1_values$call)
paste0('The price of the put option is: ', q_1_values$put)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(K, s_0, r, time, sigma)
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
s_0 <- 50 ## current stock price
K <- 50 ## Current strike price
r <- 0.05 ## Risk Free Rate
sigma <- 0.4 ## volatility of underlying equity
time <- 1 ## Time to maturity (in days)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(K, s_0, r, time, sigma)
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
### Start by defining the terms
s_0 <- 50 ## current stock price
K <- 50 ## Current strike price
r <- 0.05 ## Risk Free Rate
sigma <- 0.4 ## volatility of underlying equity
time <- 1 ## Time to maturity (in days)
##### Question 1: ####
# Find the value of one year
# european call and put options on a
# stock currently trading for $50 with a
# strike price of $50. With a risk free rate
# of 5% and the underlying stock volatility of 40%
###### Question 2: #####
# Create a function to calculate the model
# given the dependent variables
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
paste0('The price of the call option is: ', q_1_values$call)
paste0('The price of the put option is: ', q_1_values$put)
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
k <- 50 ## Current strike price
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k, s_0, r, time, sigma)
# Vijay Yedidi- Homework 1
setwd("~/Desktop/msba/spring2021/simulation_computation/homework/hw1")
## Call all the needed packages
source('funs.r')
library(tidyverse)
library(reshape2)
D_1 <- function(s_0, k, r, sigma, time){
## Function to find d_1
# Breaking the formula up into smaller parts
a <- log(s_0 / k)
b <- time * (r + ((sigma ^2 ) / 2))
c <- sigma * sqrt(time)
#Put the parts of the equation together
d_1 <- (a + b) / (c)
return(d_1)
}
d_1 <- D_1(s_0 = 50, k = 50, r = 0.05, sigma = 0.4, time = 1)
print(d_1)
D_2 <- function(s_0, k, r, sigma, time){
## Function to find d_2
# Breaking up the formula up into smaller parts
a <- log(s_0 / k)
b <- time * (r - ((sigma ^2 ) / 2))
c <- sigma * sqrt(time)
# Put the parts of the equation together
d_2 <- (a + b) / (c)
return(d_2)
}
d_2 <- D_2(s_0 = 50, k = 50, r = 0.05, sigma = 0.4, time = 1)
Call_Option <- function(k, s_0, d_1, r, time, d_2){
## Calculate the value of the call option
## Breaking up the formula into smaller parts
a <- s_0 * pnorm(d_1)
b <- k * exp(-r * time) * pnorm(d_2)
c <- a - b
return(c)
}
print(D_2(s_0 = 50, k = 50, r = 0.05, sigma = 0.4, time = 1) )
print(D_2(s_0 = 50, k = 50, r = 0.05, sigma = 0.4, time = 1) )
Call_Option <- function(k, s_0, d_1, r, time, d_2){
## Calculate the value of the call option
## Breaking up the formula into smaller parts
a <- s_0 * pnorm(d_1)
b <- k * exp(-r * time) * pnorm(d_2)
c <- a - b
return(c)
}
print(Call_Option(k = 50, s_0 = 50, d_1 = d_1, r = 0.05, time = 1, d_2 = d_2))
Put_Option <- function(k, s_0, d_1, r, time, d_2){
## Calculate the value of the put option
## Breaking up the formula into smaller parts
a <- s_0 * pnorm(-d_1)
b <- k * exp(-r * time) * pnorm(-d_2)
return( -a + b)
}
print(Put_Option(k = 50, s_0 = 50, d_1 = d_1, r = 0.05, time = 1, d_2 = d_2) )
Black_Scholes_Merton <- function(k, s_0, r, time, sigma){
### Use the previously created functions to create the Black Scholes Model
## Find the values for d_1 and d_2
d_1 <- D_1(s_0, k, r, sigma, time)
d_2 <- D_2(s_0, k, r, sigma, time)
## Find the values for the call and put options
c <- Call_Option(k, s_0, d_1, r, time, d_2)
p <- Put_Option(k, s_0, d_1, r, time, d_2)
## Return the call and put option values as a list
return(list('call' = c,
'put' = p))
}
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k = 50, s_0 = 50, r = 0.05, time = 1, sigma = 0.4)
paste0('The price of the call option is: ', q_1_values$call)
paste0('The price of the put option is: ', q_1_values$put)
print(D_2(s_0 = 50, k = 50, r = 0.05, sigma = 0.4, time = 1) )
## Use the Black Scholes Merton formula
q_1_values <- Black_Scholes_Merton(k = 50, s_0 = 50, r = 0.05, time = 1, sigma = 0.4)
paste0('The price of the call option is: ', q_1_values$call)
paste0('The price of the put option is: ', q_1_values$put)
